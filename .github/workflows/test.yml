name: Test

on:
  workflow_call:
    inputs:
      AWS_ACCOUNT_ID:
        required: true
        type: string
      AWS_REGION:
        required: true
        type: string
      TRAIL_NAME:
        required: true
        type: string
      KOSLI_ORG:
        required: true
        type: string
    secrets:
      slack_channel:
        required: true
      slack_webhook:
        required: true
      github_access_token:
        required: true
      gitlab_access_token:
        required: true 
      azure_access_token:
        required: true 
      azure_client_id:
        required: true
      azure_client_secret:
        required: true
      bitbucket_password:
        required: true
      jira_api_token:
        required: true 
      snyk_token:
        required: true
      kosli_api_token:
        required: true


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

    - uses: actions/checkout@v4
    
    - uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'

    - name: setup-kosli-cli
      uses: kosli-dev/setup-cli-action@v2
      with:
        version:
          ${{ vars.KOSLI_CLI_VERSION }}
    
    - name: Run golangci-lint
      id: lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m -v

    - name: Report lint to Kosli
      if:  ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) &&  (success() || failure()) }}
      env:
        KOSLI_API_TOKEN: ${{ secrets.kosli_api_token }}
      run: kosli attest generic 
           --name lint 
           --flow cli 
           --trail ${{ inputs.TRAIL_NAME }}  
           --org ${{ inputs.KOSLI_ORG }}
           --compliant=${{ steps.lint.outcome == 'success' }} 

    - name: Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.slack_channel }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Lint Failed in CLI repository
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.slack_webhook }} 

  test:
    name: Test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # needed for some tests referencing older commits
    
    - uses: actions/setup-go@v5
      with:
        go-version: '1.22.0'

    - name: setup-kosli-cli
      uses: kosli-dev/setup-cli-action@v2
      with:
        version:
          ${{ vars.KOSLI_CLI_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/cli
        aws-region: ${{ inputs.AWS_REGION }}
        role-duration-seconds: 2400
        role-session-name: ${{ github.event.repository.name }}

    - name: Login to Amazon ECR private
      id: login-ecr-private
      uses: aws-actions/amazon-ecr-login@v2

    - name: Run tests
      env:
        KOSLI_GITHUB_TOKEN: ${{ secrets.github_access_token }}
        KOSLI_GITLAB_TOKEN: ${{ secrets.gitlab_access_token }}
        KOSLI_AZURE_TOKEN: ${{ secrets.azure_access_token }}
        KOSLI_BITBUCKET_PASSWORD: ${{ secrets.bitbucket_password }}
        KOSLI_JIRA_API_TOKEN: ${{ secrets.jira_api_token }}
        INTEGRATION_TEST_AZURE_CLIENT_SECRET: ${{ secrets.azure_client_secret }}
        INTEGRATION_TEST_AZURE_CLIENT_ID: ${{ secrets.azure_client_id }}
      run: |
        # some tests use git operations, therefore the git author on the CI VM needs to be set
        git config --global user.name "John Doe"
        git config --global user.email johndoe@example.com
        make test_integration_full

    - name: Report test to Kosli
      if:  ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) &&  (success() || failure()) }}
      env:
        KOSLI_API_TOKEN: ${{ secrets.kosli_api_token }}
      run: kosli attest junit 
           --name test 
           --flow cli 
           --trail ${{ inputs.TRAIL_NAME }} 
           --org ${{ inputs.KOSLI_ORG }}

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4

    - name: Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.slack_channel }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Test Failed in CLI repository
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.slack_webhook }}

  snyk-code:
    name: Snyk Code
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:

    - uses: actions/checkout@v4

    - name: setup Snyk
      uses: snyk/actions/setup@master

    - name: setup-kosli-cli
      uses: kosli-dev/setup-cli-action@v2
      with:
        version:
          ${{ vars.KOSLI_CLI_VERSION }}

    - name: Run Snyk to check source code for vulnerabilities
      env:
        SNYK_TOKEN: ${{ secrets.snyk_token }}
      run: 
          snyk test --sarif --policy-path=.snyk  --sarif-file-output=snyk-code.json --prune-repeated-subdependencies
    
    - name: Report Snyk Code to Kosli
      if:  ${{ (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) &&  (success() || failure()) }}
      env:
        KOSLI_API_TOKEN: ${{ secrets.kosli_api_token }}
      run: kosli attest snyk 
           --name snyk-code 
           --flow cli 
           --trail ${{ inputs.TRAIL_NAME }} 
           --scan-results  snyk-code.json
           --org ${{ inputs.KOSLI_ORG }}
    
    - name: Slack Notification on Failure
      if: ${{ failure() }}
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: ${{ secrets.slack_channel }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_TITLE: Snyk Code Failed in CLI repository
        SLACK_USERNAME: GithubActions
        SLACK_WEBHOOK: ${{ secrets.slack_webhook }}
